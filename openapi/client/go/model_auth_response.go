/*
West Coast Informatics Terminology API

API documentation for the <a href=\"https://www.westcoastinformatics.com\">West Coast Informatics</a> terminology server API.<p>Request a 30-day bearer token from <a href=\"mailto:info@westcoastinformatics.com\">info@westcoastinformatics.com</a>.</p> <p>For full documentation on this service, please visit our wiki page at <a href=\"https://wci-wiki.atlassian.net/wiki/spaces/TSV2\">https://wci-wiki.atlassian.net/wiki/spaces/TSV2</a>.</p>

API version: 1.0.0
Contact: info@westcoastinformatics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthResponse{}

// AuthResponse Response to successful authentication
type AuthResponse struct {
	// the access token
	AccessToken string `json:"access_token"`
	// milliseconds until the access token expires
	ExpiresIn int64 `json:"expires_in"`
	// epoch time of access token expiration
	ExpiresOn int64 `json:"expires_on"`
	// the token type
	TokenType string `json:"token_type"`
}

// NewAuthResponse instantiates a new AuthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthResponse(accessToken string, expiresIn int64, expiresOn int64, tokenType string) *AuthResponse {
	this := AuthResponse{}
	this.AccessToken = accessToken
	this.ExpiresIn = expiresIn
	this.ExpiresOn = expiresOn
	this.TokenType = tokenType
	return &this
}

// NewAuthResponseWithDefaults instantiates a new AuthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthResponseWithDefaults() *AuthResponse {
	this := AuthResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *AuthResponse) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *AuthResponse) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *AuthResponse) GetExpiresIn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetExpiresInOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *AuthResponse) SetExpiresIn(v int64) {
	o.ExpiresIn = v
}

// GetExpiresOn returns the ExpiresOn field value
func (o *AuthResponse) GetExpiresOn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresOn
}

// GetExpiresOnOk returns a tuple with the ExpiresOn field value
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetExpiresOnOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresOn, true
}

// SetExpiresOn sets field value
func (o *AuthResponse) SetExpiresOn(v int64) {
	o.ExpiresOn = v
}

// GetTokenType returns the TokenType field value
func (o *AuthResponse) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *AuthResponse) SetTokenType(v string) {
	o.TokenType = v
}

func (o AuthResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["expires_in"] = o.ExpiresIn
	toSerialize["expires_on"] = o.ExpiresOn
	toSerialize["token_type"] = o.TokenType
	return toSerialize, nil
}

type NullableAuthResponse struct {
	value *AuthResponse
	isSet bool
}

func (v NullableAuthResponse) Get() *AuthResponse {
	return v.value
}

func (v *NullableAuthResponse) Set(val *AuthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthResponse(val *AuthResponse) *NullableAuthResponse {
	return &NullableAuthResponse{value: val, isSet: true}
}

func (v NullableAuthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


