/*
West Coast Informatics Terminology API

API documentation for the <a href=\"https://www.westcoastinformatics.com\">West Coast Informatics</a> terminology server API.<p>Request a 30-day bearer token from <a href=\"mailto:info@westcoastinformatics.com\">info@westcoastinformatics.com</a>.</p> <p>For full documentation on this service, please visit our wiki page at <a href=\"https://wci-wiki.atlassian.net/wiki/spaces/TSV2\">https://wci-wiki.atlassian.net/wiki/spaces/TSV2</a>.</p>

API version: 1.0.0
Contact: info@westcoastinformatics.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResultListMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultListMapping{}

// ResultListMapping struct for ResultListMapping
type ResultListMapping struct {
	// the total number of potential results
	Total int32 `json:"total"`
	// the max number results requested
	Limit int32 `json:"limit"`
	// the starting index requested
	Offset int32 `json:"offset"`
	// the score of the search result, when used
	Confidence *float64 `json:"confidence,omitempty"`
	// the items themselves (the format will vary depending on the type of list)
	Items []Mapping `json:"items"`
}

// NewResultListMapping instantiates a new ResultListMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultListMapping(total int32, limit int32, offset int32, items []Mapping) *ResultListMapping {
	this := ResultListMapping{}
	this.Total = total
	this.Limit = limit
	this.Offset = offset
	this.Items = items
	return &this
}

// NewResultListMappingWithDefaults instantiates a new ResultListMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultListMappingWithDefaults() *ResultListMapping {
	this := ResultListMapping{}
	return &this
}

// GetTotal returns the Total field value
func (o *ResultListMapping) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ResultListMapping) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ResultListMapping) SetTotal(v int32) {
	o.Total = v
}

// GetLimit returns the Limit field value
func (o *ResultListMapping) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *ResultListMapping) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *ResultListMapping) SetLimit(v int32) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *ResultListMapping) GetOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *ResultListMapping) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *ResultListMapping) SetOffset(v int32) {
	o.Offset = v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *ResultListMapping) GetConfidence() float64 {
	if o == nil || IsNil(o.Confidence) {
		var ret float64
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultListMapping) GetConfidenceOk() (*float64, bool) {
	if o == nil || IsNil(o.Confidence) {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *ResultListMapping) HasConfidence() bool {
	if o != nil && !IsNil(o.Confidence) {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given float64 and assigns it to the Confidence field.
func (o *ResultListMapping) SetConfidence(v float64) {
	o.Confidence = &v
}

// GetItems returns the Items field value
func (o *ResultListMapping) GetItems() []Mapping {
	if o == nil {
		var ret []Mapping
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ResultListMapping) GetItemsOk() ([]Mapping, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ResultListMapping) SetItems(v []Mapping) {
	o.Items = v
}

func (o ResultListMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultListMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["limit"] = o.Limit
	toSerialize["offset"] = o.Offset
	if !IsNil(o.Confidence) {
		toSerialize["confidence"] = o.Confidence
	}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableResultListMapping struct {
	value *ResultListMapping
	isSet bool
}

func (v NullableResultListMapping) Get() *ResultListMapping {
	return v.value
}

func (v *NullableResultListMapping) Set(val *ResultListMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableResultListMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableResultListMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultListMapping(val *ResultListMapping) *NullableResultListMapping {
	return &NullableResultListMapping{value: val, isSet: true}
}

func (v NullableResultListMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultListMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


