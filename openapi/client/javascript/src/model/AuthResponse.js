/**
 * West Coast Informatics Terminology API
 * API documentation for the <a href=\"https://www.westcoastinformatics.com\">West Coast Informatics</a> terminology server API.<p>Request a 30-day bearer token from <a href=\"mailto:info@westcoastinformatics.com\">info@westcoastinformatics.com</a>.</p> <p>For full documentation on this service, please visit our wiki page at <a href=\"https://wci-wiki.atlassian.net/wiki/spaces/TSV2\">https://wci-wiki.atlassian.net/wiki/spaces/TSV2</a>.</p>
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@westcoastinformatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthResponse model module.
 * @module model/AuthResponse
 * @version 1.0.0
 */
class AuthResponse {
    /**
     * Constructs a new <code>AuthResponse</code>.
     * Response to successful authentication
     * @alias module:model/AuthResponse
     * @param accessToken {String} the access token
     * @param expiresIn {Number} milliseconds until the access token expires
     * @param expiresOn {Number} epoch time of access token expiration
     * @param tokenType {String} the token type
     */
    constructor(accessToken, expiresIn, expiresOn, tokenType) { 
        
        AuthResponse.initialize(this, accessToken, expiresIn, expiresOn, tokenType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessToken, expiresIn, expiresOn, tokenType) { 
        obj['access_token'] = accessToken;
        obj['expires_in'] = expiresIn;
        obj['expires_on'] = expiresOn;
        obj['token_type'] = tokenType;
    }

    /**
     * Constructs a <code>AuthResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthResponse} obj Optional instance to populate.
     * @return {module:model/AuthResponse} The populated <code>AuthResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthResponse();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('expires_in')) {
                obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'Number');
            }
            if (data.hasOwnProperty('expires_on')) {
                obj['expires_on'] = ApiClient.convertToType(data['expires_on'], 'Number');
            }
            if (data.hasOwnProperty('token_type')) {
                obj['token_type'] = ApiClient.convertToType(data['token_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['token_type'] && !(typeof data['token_type'] === 'string' || data['token_type'] instanceof String)) {
            throw new Error("Expected the field `token_type` to be a primitive type in the JSON string but got " + data['token_type']);
        }

        return true;
    }


}

AuthResponse.RequiredProperties = ["access_token", "expires_in", "expires_on", "token_type"];

/**
 * the access token
 * @member {String} access_token
 */
AuthResponse.prototype['access_token'] = undefined;

/**
 * milliseconds until the access token expires
 * @member {Number} expires_in
 */
AuthResponse.prototype['expires_in'] = undefined;

/**
 * epoch time of access token expiration
 * @member {Number} expires_on
 */
AuthResponse.prototype['expires_on'] = undefined;

/**
 * the token type
 * @member {String} token_type
 */
AuthResponse.prototype['token_type'] = undefined;






export default AuthResponse;

