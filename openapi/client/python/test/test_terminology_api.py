# coding: utf-8

"""
    West Coast Informatics Terminology API

    API documentation for the <a href=\"https://www.westcoastinformatics.com\">West Coast Informatics</a> terminology server API.<p>Request a 30-day bearer token from <a href=\"mailto:info@westcoastinformatics.com\">info@westcoastinformatics.com</a>.</p> <p>For full documentation on this service, please visit our wiki page at <a href=\"https://wci-wiki.atlassian.net/wiki/spaces/TSV2\">https://wci-wiki.atlassian.net/wiki/spaces/TSV2</a>.</p>

    The version of the OpenAPI document: 1.0.0
    Contact: info@westcoastinformatics.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.terminology_api import TerminologyApi  # noqa: E501


class TestTerminologyApi(unittest.TestCase):
    """TerminologyApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TerminologyApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_add_synonym(self) -> None:
        """Test case for add_synonym

        Add synonym  # noqa: E501
        """
        pass

    def test_autocomplete_concepts1(self) -> None:
        """Test case for autocomplete_concepts1

        Autocomplete  # noqa: E501
        """
        pass

    def test_find_concepts(self) -> None:
        """Test case for find_concepts

        Find concepts  # noqa: E501
        """
        pass

    def test_find_concepts2(self) -> None:
        """Test case for find_concepts2

        Find concepts (across all terminologies)  # noqa: E501
        """
        pass

    def test_find_mappings1(self) -> None:
        """Test case for find_mappings1

        Find mappings  # noqa: E501
        """
        pass

    def test_find_subset_memberships1(self) -> None:
        """Test case for find_subset_memberships1

        Get concept subset memberships  # noqa: E501
        """
        pass

    def test_find_tree_position_children1(self) -> None:
        """Test case for find_tree_position_children1

        Find tree position children  # noqa: E501
        """
        pass

    def test_find_tree_positions1(self) -> None:
        """Test case for find_tree_positions1

        Find tree positions  # noqa: E501
        """
        pass

    def test_get_concept1(self) -> None:
        """Test case for get_concept1

        Get concept  # noqa: E501
        """
        pass

    def test_get_concept_mappings1(self) -> None:
        """Test case for get_concept_mappings1

        Get concept mappings  # noqa: E501
        """
        pass

    def test_get_config_properties1(self) -> None:
        """Test case for get_config_properties1

        Get properties  # noqa: E501
        """
        pass

    def test_get_mapset1(self) -> None:
        """Test case for get_mapset1

        Get mapset  # noqa: E501
        """
        pass

    def test_get_mapsets1(self) -> None:
        """Test case for get_mapsets1

        Get mapsets  # noqa: E501
        """
        pass

    def test_get_relationships1(self) -> None:
        """Test case for get_relationships1

        Get concept relationships  # noqa: E501
        """
        pass

    def test_get_subset1(self) -> None:
        """Test case for get_subset1

        Get subset  # noqa: E501
        """
        pass

    def test_get_subsets1(self) -> None:
        """Test case for get_subsets1

        Get subsets  # noqa: E501
        """
        pass

    def test_get_subtree1(self) -> None:
        """Test case for get_subtree1

        Get subtree  # noqa: E501
        """
        pass

    def test_get_terminologies1(self) -> None:
        """Test case for get_terminologies1

        Get terminologies  # noqa: E501
        """
        pass

    def test_get_terminology1(self) -> None:
        """Test case for get_terminology1

        Get terminology  # noqa: E501
        """
        pass

    def test_get_terminology_metadata1(self) -> None:
        """Test case for get_terminology_metadata1

        Get terminology metadata  # noqa: E501
        """
        pass

    def test_resolve_expression1(self) -> None:
        """Test case for resolve_expression1

        Resolve expression  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
